---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: l3-front
  namespace: {{ $.Release.Namespace }}
  annotations:
    {{ if eq .Values.env "sandbox" }}
    cert-manager.io/cluster-issuer: letsencrypt-prod-cloudflare
    {{ else if eq .Values.env "sandbox-2" }}
    cert-manager.io/cluster-issuer: letsencrypt-prod-cloudflare
    {{ else if eq .Values.env "stage" }}
    cert-manager.io/cluster-issuer: letsencrypt-prod-cloudflare
    {{ else }}
    cert-manager.io/cluster-issuer: letsencrypt-prod
    {{ end }}
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    {{ if eq .Values.env "sandbox" }}
    - "l3-front.sandbox.zkx.fi"
    {{ else if eq .Values.env "sandbox-2" }}
    - "l3-front.sandbox-2.zkx.fi"
    {{ else if eq .Values.env "stage" }}
    - "l3-front.stage.zkx.fi"
    {{ else }}
    - "l3-front.{{ .Values.env }}.k8s.ntwrkx.com"
    {{ end }}
    secretName: l3-front
  rules:
  {{ if eq .Values.env "sandbox" }}
  - host: "l3-front.sandbox.zkx.fi"
  {{ else if eq .Values.env "sandbox-2" }}
  - host: "l3-front.sandbox-2.zkx.fi"
  {{ else if eq .Values.env "stage" }}
  - host: "l3-front.stage.zkx.fi"
  {{ else }}
  - host: "l3-front.{{ .Values.env }}.k8s.ntwrkx.com"
  {{ end }}
    http:
      paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: l3-front
              port:
                number: 80